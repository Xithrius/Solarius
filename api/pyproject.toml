[project]
name = "solarius-api"
version = "0.1.0"
description = "API portion of Solarius"
authors = [{ name = "Xithrius", email = "xithrius@gmail.com" }]
requires-python = ">=3.11,<3.12"
license = { text = "MIT" }
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.25.0",
    "gunicorn>=21.2.0",
    "sqlalchemy[asyncio]>=2.0.25",
    "asyncpg>=0.29.0",
    "alembic>=1.13.1",
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    "httpx>=0.26.0",
    "httptools>=0.6.1",
    "yarl>=1.9.4",
    "ujson>=5.9.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.2",
    "prometheus-client>=0.19.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "testcontainers[postgres]>=3.7.1",
    "pytest>=7.4.4",
    "transformers>=4.36.2",
    "tensorflow>=2.15.0",
]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
precommit = ["pre-commit==3.6.2"]
test = [
    "pytest==8.1.1",
    "anyio==4.3.0",
    "pytest-cov==4.1.0",
    "pytest-env==1.1.3",
    "pytest-xdist==3.5.0",
    "psycopg==3.1.18",
    "testcontainers[postgres]==4.2.0rc2",
    "gevent==24.2.1",
]

[tool.pdm.scripts]
start = "python3 -m app"

# Linting and formatting
lint = "pre-commit run --all-files"
precommit = "pre-commit install"

# Database migrating
history = "alembic history"
migrate = "alembic revision --autogenerate -m"
upgrade = "alembic upgrade head"
downgrade = "alembic downgrade"

# Testing
test = "pytest --ff"
atest = "pytest -n auto --ff"
vtest = "pytest -vvv --ff"
retest = "pytest --lf"

# Coverage
test-cov = "pytest --cov=./ --cov-report=xml"
html = "coverage html"
report = "coverage report --sort=Cover"

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]
